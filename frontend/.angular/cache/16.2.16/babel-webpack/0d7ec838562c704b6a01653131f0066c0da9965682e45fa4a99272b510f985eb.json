{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = `${environment.apiUrl}/orders`;\n    }\n    createOrder(orderData) {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.post(this.apiUrl, orderData, {\n        headers\n      });\n    }\n    getMyOrders() {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.get(`${this.apiUrl}/my-orders`, {\n        headers\n      });\n    }\n    getAllOrders() {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.get(this.apiUrl, {\n        headers\n      });\n    }\n    getOrder(id) {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.get(`${this.apiUrl}/${id}`, {\n        headers\n      });\n    }\n    updateOrderStatus(id, status) {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.patch(`${this.apiUrl}/${id}/status`, {\n        status\n      }, {\n        headers\n      });\n    }\n    static {\n      this.ɵfac = function OrderService_Factory(t) {\n        return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: OrderService,\n        factory: OrderService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}