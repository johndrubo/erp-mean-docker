{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = `${environment.apiUrl}/products`;\n    }\n    getProducts() {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.get(this.apiUrl, {\n        headers\n      });\n    }\n    getProduct(id) {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.get(`${this.apiUrl}/${id}`, {\n        headers\n      });\n    }\n    createProduct(product) {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.post(this.apiUrl, product, {\n        headers\n      });\n    }\n    updateProduct(id, product) {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.put(`${this.apiUrl}/${id}`, product, {\n        headers\n      });\n    }\n    deleteProduct(id) {\n      const headers = this.authService.getAuthHeaders();\n      return this.http.delete(`${this.apiUrl}/${id}`, {\n        headers\n      });\n    }\n    static {\n      this.ɵfac = function ProductService_Factory(t) {\n        return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ProductService,\n        factory: ProductService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}